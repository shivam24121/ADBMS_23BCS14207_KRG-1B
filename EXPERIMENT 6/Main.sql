--medium level--

CREATE TABLE EMPLOYEES (
    EMP_ID SERIAL PRIMARY KEY,
    EMP_NAME TEXT,
    GENDER TEXT
);

INSERT INTO EMPLOYEES (EMP_NAME, GENDER) VALUES
('RAHUL', 'MALE'),
('PRIYA', 'FEMALE'),
('AMIT', 'MALE'),
('NEHA', 'FEMALE'),
('ARJUN', 'MALE'),
('SNEHA', 'FEMALE');

CREATE OR REPLACE PROCEDURE GET_EMPLOYEE_COUNT_BY_GENDER(
    IN IN_GENDER TEXT,
    OUT OUT_COUNT INT
)
LANGUAGE plpgsql
AS $$
BEGIN
    SELECT COUNT(*)
    INTO OUT_COUNT
    FROM EMPLOYEES
    WHERE GENDER = IN_GENDER;

    RAISE NOTICE 'TOTAL EMPLOYEES WITH GENDER % = %', IN_GENDER, OUT_COUNT;
END;
$$;

CALL GET_EMPLOYEE_COUNT_BY_GENDER('FEMALE', NULL);
CALL GET_EMPLOYEE_COUNT_BY_GENDER('MALE', NULL);


-- Hard level ==

CREATE TABLE PRODUCTS (
    PRODUCT_ID SERIAL PRIMARY KEY,
    PRODUCT_NAME TEXT,
    PRICE NUMERIC(10,2),
    QUANTITY_REMAINING INT,
    QUANTITY_SOLD INT DEFAULT 0
);

CREATE TABLE SALES (
    SALE_ID SERIAL PRIMARY KEY,
    PRODUCT_ID INT REFERENCES PRODUCTS(PRODUCT_ID),
    QUANTITY_ORDERED INT,
    TOTAL_PRICE NUMERIC(10,2),
    SALE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO PRODUCTS (PRODUCT_NAME, PRICE, QUANTITY_REMAINING) VALUES
('SAMSUNG GALAXY', 20000, 50),
('APPLE IPHONE', 60000, 30),
('LENOVO LAPTOP', 45000, 20),
('DELL LAPTOP', 55000, 25),
('MI TABLET', 15000, 40);

CREATE OR REPLACE PROCEDURE PLACE_ORDER(
    IN IN_PRODUCT_ID INT,
    IN IN_QUANTITY INT
)
LANGUAGE plpgsql
AS $$
DECLARE
    AVAILABLE_QTY INT;
    PRODUCT_PRICE NUMERIC(10,2);
    TOTAL_COST NUMERIC(10,2);
BEGIN
    SELECT QUANTITY_REMAINING, PRICE
    INTO AVAILABLE_QTY, PRODUCT_PRICE
    FROM PRODUCTS
    WHERE PRODUCT_ID = IN_PRODUCT_ID;

    IF AVAILABLE_QTY IS NULL THEN
        RAISE NOTICE 'INVALID PRODUCT ID!';
        RETURN;
    END IF;

    IF AVAILABLE_QTY >= IN_QUANTITY THEN
        TOTAL_COST := PRODUCT_PRICE * IN_QUANTITY;

        INSERT INTO SALES (PRODUCT_ID, QUANTITY_ORDERED, TOTAL_PRICE)
        VALUES (IN_PRODUCT_ID, IN_QUANTITY, TOTAL_COST);

        UPDATE PRODUCTS
        SET QUANTITY_REMAINING = QUANTITY_REMAINING - IN_QUANTITY,
            QUANTITY_SOLD = QUANTITY_SOLD + IN_QUANTITY
        WHERE PRODUCT_ID = IN_PRODUCT_ID;

        RAISE NOTICE 'PRODUCT SOLD SUCCESSFULLY!';
    ELSE
        RAISE NOTICE 'INSUFFICIENT QUANTITY AVAILABLE!';
    END IF;
END;
$$;

CALL PLACE_ORDER(1, 5);
CALL PLACE_ORDER(2, 50);
